{"ast":null,"code":"var _jsxFileName = \"/Users/mstar/Desktop/Acad-tasks/yt-app/src/VideoPlayer.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RecommendedVideos from \"./RecommendedVideos\";\nimport \"./style/VideoPlayer.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Video from \"./Video\";\nimport VideoInfo from \"./VideoInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"AIzaSyDjRye0LG-KWE8_VvLVRyPgtuJWSmwmKqI\";\n\nconst VideoPlayer = () => {\n  _s();\n\n  const {\n    videoId\n  } = useParams();\n  const [videoInfo, setVideoInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    setVideoInfo([]);\n    setIsLoading(true);\n    axios.get(`https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${KEY}`).then(response => {\n      createVideoInfo(response.data[\"items\"][0]);\n      setIsError(false);\n    }).catch(error => {\n      setIsError(true);\n    });\n  }, [videoId]);\n\n  async function createVideoInfo(video) {\n    const snippet = video.snippet;\n    const stats = video.statistics;\n    const channelId = snippet.channelId;\n    const response = await axios.get(`https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${KEY}`);\n    const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\n    const subs = response.data.items[0].statistics.subscriberCount;\n    const publishedDate = new Date(snippet.publishedAt).toLocaleDateString(\"en-GB\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    });\n    const title = snippet.title;\n    const description = snippet.description;\n    const channelTitle = snippet.channelTitle;\n    const viewCount = stats.viewCount;\n    const likeCount = stats.likeCount;\n    const dislikeCount = stats.dislikeCount;\n    setVideoInfo({\n      title,\n      description,\n      publishedDate,\n      channelTitle,\n      channelImage,\n      viewCount,\n      likeCount,\n      dislikeCount,\n      subs\n    });\n    setIsLoading(false);\n  }\n\n  if (isError) {\n    console.log(\"error in rendering video\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoPlayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoPlayerVideo\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          className: \"loading\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Video, {\n          videoId: videoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoplayerInfo\",\n        children: !isLoading ? /*#__PURE__*/_jsxDEV(VideoInfo, {\n          title: videoInfo.snippet,\n          description: videoInfo.description,\n          publishedDate: videoInfo.publishedDate,\n          channelTitle: videoInfo.channelTitle,\n          channelImage: videoInfo.channelImage,\n          viewCount: videoInfo.viewCount,\n          likeCount: videoInfo.likeCount,\n          dislikeCount: videoInfo.dislikeCount,\n          subs: videoInfo.subs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoPlayerSuggested\",\n      children: /*#__PURE__*/_jsxDEV(RecommendedVideos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoPlayer, \"SN9N2GVUE0V+C2FeR8HA3WnKxoM=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","RecommendedVideos","CircularProgress","Video","VideoInfo","KEY","VideoPlayer","videoId","videoInfo","setVideoInfo","isLoading","setIsLoading","isError","setIsError","get","then","response","createVideoInfo","data","catch","error","video","snippet","stats","statistics","channelId","channelImage","items","thumbnails","medium","url","subs","subscriberCount","publishedDate","Date","publishedAt","toLocaleDateString","day","month","year","title","description","channelTitle","viewCount","likeCount","dislikeCount","console","log"],"sources":["/Users/mstar/Desktop/Acad-tasks/yt-app/src/VideoPlayer.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RecommendedVideos from \"./RecommendedVideos\";\nimport \"./style/VideoPlayer.css\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Video from \"./Video\";\nimport VideoInfo from \"./VideoInfo\";\n\nconst KEY = \"AIzaSyDjRye0LG-KWE8_VvLVRyPgtuJWSmwmKqI\";\n\nconst VideoPlayer = () => {\n  const { videoId } = useParams();\n  const [videoInfo, setVideoInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setVideoInfo([]);\n    setIsLoading(true);\n\n    axios\n      .get(\n        `https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${KEY}`\n      )\n      .then((response) => {\n        createVideoInfo(response.data[\"items\"][0]);\n        setIsError(false);\n      })\n      .catch((error) => {\n        setIsError(true);\n      });\n  }, [videoId]);\n\n  async function createVideoInfo(video) {\n    const snippet = video.snippet;\n    const stats = video.statistics;\n    const channelId = snippet.channelId;\n    const response = await axios.get(\n      `https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${KEY}`\n    );\n    const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\n    const subs = response.data.items[0].statistics.subscriberCount;\n    const publishedDate = new Date(snippet.publishedAt).toLocaleDateString(\n      \"en-GB\",\n      {\n        day: \"numeric\",\n        month: \"short\",\n        year: \"numeric\",\n      }\n    );\n    const title = snippet.title;\n    const description = snippet.description;\n    const channelTitle = snippet.channelTitle;\n    const viewCount = stats.viewCount;\n    const likeCount = stats.likeCount;\n    const dislikeCount = stats.dislikeCount;\n    setVideoInfo({\n      title,\n      description,\n      publishedDate,\n      channelTitle,\n      channelImage,\n      viewCount,\n      likeCount,\n      dislikeCount,\n      subs,\n    });\n    setIsLoading(false);\n  }\n  if (isError) {\n    console.log(\"error in rendering video\");\n  }\n  return (\n    <div className=\"videoPlayer\">\n      <div className=\"videoDetails\">\n        <div className=\"videoPlayerVideo\">\n          {isLoading ? (\n            <CircularProgress className=\"loading\" color=\"secondary\" />\n          ) : (\n            <Video videoId={videoId} />\n          )}\n        </div>\n        <div className=\"videoplayerInfo\">\n          {!isLoading ? (\n            <VideoInfo\n              title={videoInfo.snippet}\n              description={videoInfo.description}\n              publishedDate={videoInfo.publishedDate}\n              channelTitle={videoInfo.channelTitle}\n              channelImage={videoInfo.channelImage}\n              viewCount={videoInfo.viewCount}\n              likeCount={videoInfo.likeCount}\n              dislikeCount={videoInfo.dislikeCount}\n              subs={videoInfo.subs}\n            />\n          ) : null}\n        </div>\n      </div>\n      <div className=\"videoPlayerSuggested\">\n        <RecommendedVideos />\n      </div>\n    </div>\n  );\n};\n\nexport default VideoPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}